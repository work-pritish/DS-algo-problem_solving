#include<bits/stdc++.h>
using namespace std;

void dfs(vector<vector<int>> &graph, vector<bool> &visited, int node)
{
  visited[node] = true;
  cout << node << " ";
  for(auto v : graph[node])
  {
    if(visited[v] == false)
      dfs(graph, visited, v);
  }
}

void bfs(vector<vector<int>> &graph, vector<bool> &visited, int node)
{
  queue<int> q;
  q.push(node);
  while(!q.empty())
  {
    cout << q.front() << " ";
    visited[q.front()] = true;
    for(auto v : graph[q.front()])
    {
      if(visited[v] == false)
        q.push(v);
    }
    q.pop();
  }
}
int main()
{
  int v, e;
  cin >> v >> e;
  vector<vector<int>> graph(v + 1);
  while(e--)
  {
    int x, y;
    cin >> x >> y;
    graph[x].push_back(y);
  }
  vector<bool> visited(v + 1, false);
  bfs(graph, visited, 1);
  return 0;
}